@using University.Common
@model PaginatedList<University.Models.Student>
@*@model IEnumerable<University.Models.Student>*@

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<div class="container pb-3">
    <div class="row d-flex flex-row-reverse">
        <div class="col-auto">
            <a asp-action="Create" class="btn btn-warning">Create New</a>
        </div>
    </div>
</div>

<form asp-action="Index" method="get">
    <div class="form-actions no-color container pb-3 pt-3 text-center">
        <div class="row d-flex">
            <div class="col-auto">
                <label>Find by name</label>
            </div>
            <div class="col-auto">
                <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control" />
            </div>
            <div class="col-auto">
                <input type="submit" value="Search" class="btn btn-outline-success" />
            </div>
            <div class="col-auto">
                <a asp-action="Index" class="btn btn-outline-dark">Back to Full List</a>
            </div>
        </div>
    </div>
</form>

<table class="table table-hover">
    <thead>
        <tr>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["NameSortParm"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    @*@Html.DisplayNameFor(model => model.LasName)*@
                    LastName
                </a>
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.FirstName)*@
                FirstName
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["DateSortParm"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    @*@Html.DisplayNameFor(model => model.EnrollmentDate)*@
                    EnrollmentDate
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EnrollmentDate)
                </td>
                <td class="text-center">
                    <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-outline-primary btn-sm">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-outline-secondary btn-sm">Details</a>
                    <a asp-action="Delete" asp-route-id="@item.ID" class="btn btn-outline-danger btn-sm">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- paginated -->
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div class="container text-center">
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-outline-info @prevDisabled">
        Previous
    </a>
    @for (int i = 0; i < @Model.TotalPages; i++)
    {
        <a class="btn btn-outline-secondary disabled">@(i+1)</a>
    }

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-outline-info @nextDisabled">
        Next
    </a>
</div>
